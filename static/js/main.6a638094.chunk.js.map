{"version":3,"sources":["components/WordCard.js","App.js","reportWebVitals.js","index.js"],"names":["WordCard","props","WordButton","styled","button","wordAudio","Audio","audio","Card","className","onClick","play","catch","err","console","log","word","App","food","words","filter","category","people","medical","places","misc","Container","map","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ofAsCeA,MAlCf,SAAkBC,GAGlB,IAAMC,EAAaC,IAAOC,OAAV,KAaRC,EAAY,IAAIC,MAAML,EAAMM,OAMhC,OACI,mCACA,cAACC,EAAA,EAAD,CAAMC,UAAU,WAAhB,SACI,cAACP,EAAD,CAAYQ,QARP,WACTL,EAAUM,OACTC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAMtB,SACI,6BAAKZ,EAAMe,c,4BC2CZC,MAnEf,WACE,IAAMC,EAAOC,EAAMC,QAAO,SAAAJ,GAAI,MAAsB,SAAlBA,EAAKK,YACjCC,EAASH,EAAMC,QAAO,SAAAJ,GAAI,MAAsB,WAAlBA,EAAKK,YACnCE,EAAUJ,EAAMC,QAAO,SAAAJ,GAAI,MAAsB,YAAlBA,EAAKK,YACpCG,EAASL,EAAMC,QAAO,SAAAJ,GAAI,MAAsB,WAAlBA,EAAKK,YACnCI,EAAON,EAAMC,QAAO,SAAAJ,GAAI,MAAsB,SAAlBA,EAAKK,YACvC,OACE,cAACK,EAAA,EAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,oBAAIjB,UAAU,SAAd,oBAEF,cAAC,IAAD,UACE,oBAAIA,UAAU,SAAd,sBAEF,cAAC,IAAD,UACE,oBAAIA,UAAU,SAAd,uBAEF,cAAC,IAAD,UACE,oBAAIA,UAAU,SAAd,sBAEF,cAAC,IAAD,UACE,oBAAIA,UAAU,SAAd,gCAIJ,cAAC,IAAD,UAEIS,EAAKS,KAAI,SAAAX,GACP,OAAO,cAAC,EAAD,CAAwBA,KAAMA,EAAKA,KAAMT,MAAOS,EAAKT,OAAtCS,EAAKY,SAIjC,cAAC,IAAD,UAEIN,EAAOK,KAAI,SAAAX,GACT,OAAO,cAAC,EAAD,CAAwBA,KAAMA,EAAKA,KAAMT,MAAOS,EAAKT,OAAtCS,EAAKY,SAIjC,cAAC,IAAD,UAEIL,EAAQI,KAAI,SAAAX,GACV,OAAO,cAAC,EAAD,CAAwBA,KAAMA,EAAKA,KAAMT,MAAOS,EAAKT,OAAtCS,EAAKY,SAIjC,cAAC,IAAD,UAEIJ,EAAOG,KAAI,SAAAX,GACT,OAAO,cAAC,EAAD,CAAwBA,KAAMA,EAAKA,KAAMT,MAAOS,EAAKT,OAAtCS,EAAKY,SAIjC,cAAC,IAAD,UAEIH,EAAKE,KAAI,SAAAX,GACP,OAAO,cAAC,EAAD,CAAwBA,KAAMA,EAAKA,KAAMT,MAAOS,EAAKT,OAAtCS,EAAKY,eCpD1BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.6a638094.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card } from \"reactstrap\";\nimport styled from 'styled-components';\n\nfunction WordCard(props){\n    \n\nconst WordButton = styled.button`\n    background-color: #9CC3D5FF;\n    border: none;\n    color: black;\n    margin: 5px;\n    padding: 10px;\n    box-shadow: 0px 8px 15px 0px rgba(0,0,0,0.37);\n    :focus, :active {\n        background-color: #D3DBDF;\n    }\n`\n\n    // Play audio when word is clicked\n    let wordAudio = new Audio(props.audio)\n    const play = () => {\n        wordAudio.play()\n        .catch(err => console.log(err))\n    }\n\n    return (\n        <>\n        <Card className=\"wordCard\">\n            <WordButton onClick={play}>\n                <h2>{props.word}</h2>\n            </WordButton>\n            \n        </Card>\n        </>\n    )\n}\n\nexport default WordCard;","import WordCard from \"./components/WordCard\"\nimport { Container } from \"reactstrap\";\nimport words from \"./words.json\";\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\n\nfunction App() {\n  const food = words.filter(word => word.category === \"food\")\n  const people = words.filter(word => word.category === \"people\")\n  const medical = words.filter(word => word.category === \"medical\")\n  const places = words.filter(word => word.category === \"places\")\n  const misc = words.filter(word => word.category === \"misc\")\n  return (\n    <Container>\n      <Tabs>\n        <TabList>\n          <Tab>\n            <h2 className=\"header\">Food</h2>\n          </Tab>\n          <Tab>\n            <h2 className=\"header\">People</h2>\n          </Tab>\n          <Tab>\n            <h2 className=\"header\">Medical</h2>\n          </Tab>\n          <Tab>\n            <h2 className=\"header\">Places</h2>\n          </Tab>\n          <Tab>\n            <h2 className=\"header\">Miscellaneous</h2>\n          </Tab>\n        </TabList>\n\n        <TabPanel>\n          {\n            food.map(word => {\n              return <WordCard key={word.id} word={word.word} audio={word.audio} />\n            })\n          }\n        </TabPanel>\n        <TabPanel>\n          {\n            people.map(word => {\n              return <WordCard key={word.id} word={word.word} audio={word.audio} />\n            })\n          }\n        </TabPanel>\n        <TabPanel>\n          {\n            medical.map(word => {\n              return <WordCard key={word.id} word={word.word} audio={word.audio} />\n            })\n          }\n        </TabPanel>\n        <TabPanel>\n          {\n            places.map(word => {\n              return <WordCard key={word.id} word={word.word} audio={word.audio} />\n            })\n          }\n        </TabPanel>\n        <TabPanel>\n          {\n            misc.map(word => {\n              return <WordCard key={word.id} word={word.word} audio={word.audio} />\n            })\n          }\n        </TabPanel>\n      </Tabs>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}