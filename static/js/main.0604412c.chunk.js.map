{"version":3,"sources":["components/WordCard.js","App.js","reportWebVitals.js","index.js"],"names":["WordCard","props","wordAudio","Audio","audio","crossOrigin","Card","className","onClick","play","then","console","log","catch","err","word","App","food","words","filter","category","people","medical","places","misc","Container","map","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLA2BeA,MAvBf,SAAkBC,GAGd,IAAIC,EAAY,IAAIC,MAAMF,EAAMG,OAQhC,OAPAF,EAAUG,YAAc,YAQpB,mCACA,cAACC,EAAA,EAAD,CAAMC,UAAU,WAAhB,SACI,wBAAQA,UAAU,aAAaC,QAT1B,WACTN,EAAUO,OACTC,KAAKC,QAAQC,IAAI,YACjBC,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,OAMtB,SACI,6BAAKb,EAAMc,c,eC2BZC,MA1Cf,WACE,IAAMC,EAAOC,EAAMC,QAAO,SAAAJ,GAAI,MAAsB,SAAlBA,EAAKK,YACjCC,EAASH,EAAMC,QAAO,SAAAJ,GAAI,MAAsB,WAAlBA,EAAKK,YACnCE,EAAUJ,EAAMC,QAAO,SAAAJ,GAAI,MAAsB,YAAlBA,EAAKK,YACpCG,EAASL,EAAMC,QAAO,SAAAJ,GAAI,MAAsB,WAAlBA,EAAKK,YACnCI,EAAON,EAAMC,QAAO,SAAAJ,GAAI,MAAsB,SAAlBA,EAAKK,YACvC,OACE,eAACK,EAAA,EAAD,WACE,oBAAIlB,UAAU,SAAd,kBAEEU,EAAKS,KAAI,SAAAX,GACP,OAAO,cAAC,EAAD,CAAwBA,KAAMA,EAAKA,KAAMX,MAAOW,EAAKX,OAAtCW,EAAKY,OAG/B,oBAAIpB,UAAU,SAAd,oBAEEc,EAAOK,KAAI,SAAAX,GACT,OAAO,cAAC,EAAD,CAAwBA,KAAMA,EAAKA,KAAMX,MAAOW,EAAKX,OAAtCW,EAAKY,OAG/B,oBAAIpB,UAAU,SAAd,qBAEEe,EAAQI,KAAI,SAAAX,GACV,OAAO,cAAC,EAAD,CAAwBA,KAAMA,EAAKA,KAAMX,MAAOW,EAAKX,OAAtCW,EAAKY,OAG/B,oBAAIpB,UAAU,SAAd,oBAEEgB,EAAOG,KAAI,SAAAX,GACT,OAAO,cAAC,EAAD,CAAwBA,KAAMA,EAAKA,KAAMX,MAAOW,EAAKX,OAAtCW,EAAKY,OAG/B,oBAAIpB,UAAU,SAAd,2BAEEiB,EAAKE,KAAI,SAAAX,GACP,OAAO,cAAC,EAAD,CAAwBA,KAAMA,EAAKA,KAAMX,MAAOW,EAAKX,OAAtCW,EAAKY,WC3BtBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.0604412c.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card } from \"reactstrap\";\n// import friedChicken from \"../audio/fried-chicken.mp3\"\n\nfunction WordCard(props){\n\n    // Play audio when word is clicked\n    let wordAudio = new Audio(props.audio)\n    wordAudio.crossOrigin = \"anonymous\";\n    const play = () => {\n        wordAudio.play()\n        .then(console.log(\"Working\"))\n        .catch(err => console.log(err))\n    }\n\n    return (\n        <>\n        <Card className=\"wordCard\">\n            <button className=\"wordButton\" onClick={play}>\n                <h2>{props.word}</h2>\n            </button>\n            \n        </Card>\n        </>\n    )\n}\n\nexport default WordCard;","import WordCard from \"./components/WordCard\"\nimport { Container } from \"reactstrap\";\nimport words from \"./words.json\";\n\nfunction App() {\n  const food = words.filter(word => word.category === \"food\")\n  const people = words.filter(word => word.category === \"people\")\n  const medical = words.filter(word => word.category === \"medical\")\n  const places = words.filter(word => word.category === \"places\")\n  const misc = words.filter(word => word.category === \"misc\")\n  return (\n    <Container>\n      <h1 className=\"header\">Food</h1>\n      {\n        food.map(word => {\n          return <WordCard key={word.id} word={word.word} audio={word.audio}/>\n        })\n      }\n      <h1 className=\"header\">People</h1>\n      {\n        people.map(word => {\n          return <WordCard key={word.id} word={word.word} audio={word.audio}/>\n        })\n      }\n      <h1 className=\"header\">Medical</h1>\n      {\n        medical.map(word => {\n          return <WordCard key={word.id} word={word.word} audio={word.audio}/>\n        })\n      }\n      <h1 className=\"header\">Places</h1>\n      {\n        places.map(word => {\n          return <WordCard key={word.id} word={word.word} audio={word.audio}/>\n        })\n      }\n      <h1 className=\"header\">Miscellaneous</h1>\n      {\n        misc.map(word => {\n          return <WordCard key={word.id} word={word.word} audio={word.audio}/>\n        })\n      }\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}